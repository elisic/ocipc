public class InitializationController {

public PageReference populateUnits() {
    Unit__c[] units = new Unit__c[]{};
// set up ISO unit codes
units.add(new Unit__c(Name = '%', ISO__c = 'P1', Text__c = 'Percentage'));
units.add(new Unit__c(Name = 'ONE', ISO__c = 'C62', Text__c = 'One'));
units.add(new Unit__c(Name = 'D', ISO__c = 'DAY', Text__c = 'Days'));
units.add(new Unit__c(Name = 'A', ISO__c = 'AMP', Text__c = 'Ampere'));
units.add(new Unit__c(Name = 'ACR', ISO__c = 'ACR', Text__c = 'Acre'));
units.add(new Unit__c(Name = 'BAG', ISO__c = 'BG', Text__c = 'Bag'));
units.add(new Unit__c(Name = 'BAR', ISO__c = 'BAR', Text__c = 'bar'));
units.add(new Unit__c(Name = 'BOT', ISO__c = 'BO', Text__c = 'Bottle'));
units.add(new Unit__c(Name = 'BOX', ISO__c = 'CS', Text__c = 'Box'));
units.add(new Unit__c(Name = 'BQL', ISO__c = 'A18', Text__c = 'Becquerel/kilogram'));
units.add(new Unit__c(Name = 'C3S', ISO__c = '2J', Text__c = 'Cubic centimeter/second'));
units.add(new Unit__c(Name = 'CAN', ISO__c = 'CA', Text__c = 'Can'));
units.add(new Unit__c(Name = 'CAR', ISO__c = 'CT', Text__c = 'Carton'));
units.add(new Unit__c(Name = 'CCM', ISO__c = 'CMQ', Text__c = 'Cubic centimeter'));
units.add(new Unit__c(Name = 'CD', ISO__c = 'CDL', Text__c = 'Candela'));
units.add(new Unit__c(Name = 'CDM', ISO__c = 'DMQ', Text__c = 'Cubic decimeter'));
units.add(new Unit__c(Name = 'CM', ISO__c = 'CMT', Text__c = 'Centimeter'));
units.add(new Unit__c(Name = 'CM2', ISO__c = 'CMK', Text__c = 'Square centimeter'));
units.add(new Unit__c(Name = 'CL', ISO__c = 'CLT', Text__c = 'centiliter'));
units.add(new Unit__c(Name = 'DEG', ISO__c = 'DD', Text__c = 'Degree'));
units.add(new Unit__c(Name = 'DM', ISO__c = 'DMT', Text__c = 'Decimeter'));
units.add(new Unit__c(Name = 'DRM', ISO__c = 'DR', Text__c = 'Drum'));
units.add(new Unit__c(Name = 'DZ', ISO__c = 'DZN', Text__c = 'Dozen'));
units.add(new Unit__c(Name = 'EA', ISO__c = 'EA', Text__c = 'Each'));
units.add(new Unit__c(Name = '?F', ISO__c = 'FAH', Text__c = 'Fahrenheit'));
units.add(new Unit__c(Name = 'FT', ISO__c = 'FOT', Text__c = 'Foot'));
units.add(new Unit__c(Name = 'FT2', ISO__c = 'FTK', Text__c = 'Square foot'));
units.add(new Unit__c(Name = 'FT3', ISO__c = 'FTQ', Text__c = 'Cubic foot'));
units.add(new Unit__c(Name = 'G', ISO__c = 'GRM', Text__c = 'Gram'));
units.add(new Unit__c(Name = '?C', ISO__c = 'CEL', Text__c = 'Degrees Celsius'));
units.add(new Unit__c(Name = 'GKG', ISO__c = 'GK', Text__c = 'Gram/kilogram'));
units.add(new Unit__c(Name = 'GLI', ISO__c = 'GL', Text__c = 'Gram/liter'));
units.add(new Unit__c(Name = 'GAL', ISO__c = 'GLL', Text__c = 'US gallon'));
units.add(new Unit__c(Name = 'GM2', ISO__c = 'GM', Text__c = 'Gram/square meter'));
units.add(new Unit__c(Name = 'GRO', ISO__c = 'GRO', Text__c = 'Large'));
units.add(new Unit__c(Name = 'H', ISO__c = 'HUR', Text__c = 'Hour'));
units.add(new Unit__c(Name = 'HA', ISO__c = 'HAR', Text__c = 'Hectare'));
units.add(new Unit__c(Name = 'HL', ISO__c = 'HLT', Text__c = 'Hectolitre'));
units.add(new Unit__c(Name = 'HPA', ISO__c = 'A97', Text__c = 'Hectopascal'));
units.add(new Unit__c(Name = 'HZ', ISO__c = 'HTZ', Text__c = 'Hertz'));
units.add(new Unit__c(Name = 'J', ISO__c = 'JOU', Text__c = 'Joule'));
units.add(new Unit__c(Name = 'YR', ISO__c = 'ANN', Text__c = 'Years'));
units.add(new Unit__c(Name = 'K', ISO__c = 'KEL', Text__c = 'Kelvin'));
units.add(new Unit__c(Name = 'KA', ISO__c = 'B22', Text__c = 'Kiloampere'));
units.add(new Unit__c(Name = 'KBL', ISO__c = 'B25', Text__c = 'Kilobecquerel/kilogram'));
units.add(new Unit__c(Name = 'KG', ISO__c = 'KGM', Text__c = 'Kilogram'));
units.add(new Unit__c(Name = 'KGF', ISO__c = '28', Text__c = 'Kilogram/Square meter'));
units.add(new Unit__c(Name = 'KGK', ISO__c = '3H', Text__c = 'Kilogram/Kilogram'));
units.add(new Unit__c(Name = 'KGS', ISO__c = 'KGS', Text__c = 'Kilogram/second'));
units.add(new Unit__c(Name = 'KGV', ISO__c = 'KMQ', Text__c = 'Kilogram/cubic meter'));
units.add(new Unit__c(Name = 'KHZ', ISO__c = 'KHZ', Text__c = 'Kilohertz'));
units.add(new Unit__c(Name = 'CRT', ISO__c = 'CR', Text__c = 'Crate'));
units.add(new Unit__c(Name = 'KJ', ISO__c = 'KJO', Text__c = 'Kilojoule'));
units.add(new Unit__c(Name = 'KM', ISO__c = 'KTM', Text__c = 'Kilometer'));
units.add(new Unit__c(Name = 'KM2', ISO__c = 'KMK', Text__c = 'Square kilometer'));
units.add(new Unit__c(Name = 'KMH', ISO__c = 'KMH', Text__c = 'Kilometer/hour'));
units.add(new Unit__c(Name = 'KOH', ISO__c = 'B49', Text__c = 'Kiloohm'));
units.add(new Unit__c(Name = 'KV', ISO__c = 'KVT', Text__c = 'Kilovolt'));
units.add(new Unit__c(Name = 'KW', ISO__c = 'KWT', Text__c = 'Kilowatt'));
units.add(new Unit__c(Name = 'KWH', ISO__c = 'KWH', Text__c = 'Kilowatt hours'));
units.add(new Unit__c(Name = 'L', ISO__c = 'LTR', Text__c = 'Liter'));
units.add(new Unit__c(Name = 'LB', ISO__c = 'LBR', Text__c = 'US pound'));
units.add(new Unit__c(Name = 'PU', ISO__c = 'PCE', Text__c = 'Activity unit'));
units.add(new Unit__c(Name = 'LOT', ISO__c = 'LOT', Text__c = 'Lot'));
units.add(new Unit__c(Name = 'M', ISO__c = 'MTR', Text__c = 'Meter'));
units.add(new Unit__c(Name = 'M/S', ISO__c = 'MTS', Text__c = 'Meter/second'));
units.add(new Unit__c(Name = 'M2', ISO__c = 'MTK', Text__c = 'Square meter'));
units.add(new Unit__c(Name = 'M2S', ISO__c = 'S4', Text__c = 'Square meter/second'));
units.add(new Unit__c(Name = 'M3', ISO__c = 'MTQ', Text__c = 'Cubic meter'));
units.add(new Unit__c(Name = 'M3S', ISO__c = 'MQS', Text__c = 'Cubic meter/second'));
units.add(new Unit__c(Name = 'MA', ISO__c = '4K', Text__c = 'Milliampere'));
units.add(new Unit__c(Name = 'MBA', ISO__c = 'MBR', Text__c = 'Millibar'));
units.add(new Unit__c(Name = 'MG', ISO__c = 'MGM', Text__c = 'Milligram'));
units.add(new Unit__c(Name = 'MGK', ISO__c = 'NA', Text__c = 'Milligram/kilogram'));
units.add(new Unit__c(Name = 'MGL', ISO__c = 'M1', Text__c = 'Milligram/liter'));
units.add(new Unit__c(Name = 'MGQ', ISO__c = 'GP', Text__c = 'Milligram/cubic meter'));
units.add(new Unit__c(Name = 'MGW', ISO__c = 'MAW', Text__c = 'Megawatt'));
units.add(new Unit__c(Name = 'MHZ', ISO__c = 'MHZ', Text__c = 'Megahertz'));
units.add(new Unit__c(Name = 'MI', ISO__c = 'SMI', Text__c = 'Mile'));
units.add(new Unit__c(Name = 'MI2', ISO__c = 'MIK', Text__c = 'Square mile'));
units.add(new Unit__c(Name = '?M', ISO__c = '4H', Text__c = 'Micrometer'));
units.add(new Unit__c(Name = 'MIN', ISO__c = 'MIN', Text__c = 'Minute'));
units.add(new Unit__c(Name = 'MIS', ISO__c = 'B98', Text__c = 'Microsecond'));
units.add(new Unit__c(Name = 'MJ', ISO__c = 'C15', Text__c = 'Millijoule'));
units.add(new Unit__c(Name = 'ML', ISO__c = 'MLT', Text__c = 'Milliliter'));
units.add(new Unit__c(Name = 'MM', ISO__c = 'MMT', Text__c = 'Millimeter'));
units.add(new Unit__c(Name = 'MM2', ISO__c = 'MMK', Text__c = 'Square millimeter'));
units.add(new Unit__c(Name = 'MMK', ISO__c = 'D87', Text__c = 'Millimol/kilogram'));
units.add(new Unit__c(Name = 'MMO', ISO__c = 'C18', Text__c = 'Millimol'));
units.add(new Unit__c(Name = 'MMS', ISO__c = 'C16', Text__c = 'Millimeter/second'));
units.add(new Unit__c(Name = 'MOK', ISO__c = 'C19', Text__c = 'Mol/kilogram'));
units.add(new Unit__c(Name = 'MOL', ISO__c = 'C34', Text__c = 'Mol'));
units.add(new Unit__c(Name = 'MON', ISO__c = 'MON', Text__c = 'Months'));
units.add(new Unit__c(Name = 'MPA', ISO__c = 'MPA', Text__c = 'Megapascal'));
units.add(new Unit__c(Name = 'MPS', ISO__c = 'C24', Text__c = 'Millipascalseconds'));
units.add(new Unit__c(Name = 'MS', ISO__c = 'C26', Text__c = 'Millisecond'));
units.add(new Unit__c(Name = 'MS2', ISO__c = 'MSK', Text__c = 'Meter/second squared'));
units.add(new Unit__c(Name = 'MTE', ISO__c = 'C29', Text__c = 'Millitesla'));
units.add(new Unit__c(Name = 'MV', ISO__c = '2Z', Text__c = 'Millivolt'));
units.add(new Unit__c(Name = 'MW', ISO__c = 'C31', Text__c = 'Milliwatt'));
units.add(new Unit__c(Name = 'N', ISO__c = 'NEW', Text__c = 'Newton'));
units.add(new Unit__c(Name = 'NAM', ISO__c = 'C45', Text__c = 'Nanometer'));
units.add(new Unit__c(Name = 'NS', ISO__c = 'C47', Text__c = 'Nanosecond'));
units.add(new Unit__c(Name = 'OHM', ISO__c = 'OHM', Text__c = 'Ohm'));
units.add(new Unit__c(Name = 'OZ', ISO__c = 'ONZ', Text__c = 'Ounce'));
units.add(new Unit__c(Name = 'FOZ', ISO__c = 'OZA', Text__c = 'Fluid Ounce US'));
units.add(new Unit__c(Name = 'PA', ISO__c = 'PAL', Text__c = 'Pascal'));
units.add(new Unit__c(Name = 'PAC', ISO__c = 'PK', Text__c = 'Pack'));
units.add(new Unit__c(Name = 'PAL', ISO__c = 'PF', Text__c = 'Pallet'));
units.add(new Unit__c(Name = 'PAS', ISO__c = 'C65', Text__c = 'Pascal second'));
units.add(new Unit__c(Name = 'PPB', ISO__c = '61', Text__c = 'parts per billion'));
units.add(new Unit__c(Name = 'PPM', ISO__c = '59', Text__c = 'parts per million'));
units.add(new Unit__c(Name = 'PR', ISO__c = 'PR', Text__c = 'Pair'));
units.add(new Unit__c(Name = 'PT', ISO__c = 'PT', Text__c = 'Pint, US liquid'));
units.add(new Unit__c(Name = 'QT', ISO__c = 'QT', Text__c = 'Quart, US liquid'));
units.add(new Unit__c(Name = 'RDS', ISO__c = 'RDS', Text__c = 'Rounds'));
units.add(new Unit__c(Name = 'RHO', ISO__c = '23', Text__c = 'Gramm/Cubic centimeter'));
units.add(new Unit__c(Name = 'ROL', ISO__c = 'RO', Text__c = 'Role'));
units.add(new Unit__c(Name = 'S', ISO__c = 'SEC', Text__c = 'Second'));
units.add(new Unit__c(Name = 'TES', ISO__c = 'D33', Text__c = 'Tesla'));
units.add(new Unit__c(Name = 'TS', ISO__c = 'MIL', Text__c = 'Thousand'));
units.add(new Unit__c(Name = 'TO', ISO__c = 'TNE', Text__c = 'Tonnes'));
units.add(new Unit__c(Name = 'TON', ISO__c = 'STN', Text__c = 'US ton'));
units.add(new Unit__c(Name = 'V', ISO__c = 'VLT', Text__c = 'Volts'));
units.add(new Unit__c(Name = 'W', ISO__c = 'WTT', Text__c = 'Watt'));
units.add(new Unit__c(Name = 'WK', ISO__c = 'WEE', Text__c = 'Weeks'));
units.add(new Unit__c(Name = 'YD', ISO__c = 'YRD', Text__c = 'Yard'));
units.add(new Unit__c(Name = 'YD2', ISO__c = 'YDK', Text__c = 'Square Yard'));
units.add(new Unit__c(Name = 'YD3', ISO__c = 'YDQ', Text__c = 'Cubic yard'));
    insert units;

// save custom setting to store that initialization has been performed
    Init__c cs = Init__c.getInstance();
    if(cs == null) {
        cs = new Init__c();
        cs.Units__c = true;
        insert cs;
    }
    else {
        cs.Units__c = true;
        update cs;
    }
    return null;
}

}